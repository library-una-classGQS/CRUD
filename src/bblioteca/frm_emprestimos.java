/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bblioteca;

import DAO.livros_DAO;
import java.sql.ResultSet;
import DAO.conexao_DAO;
import DAO.funcionarios_DAO;
import DAO.livros_DAO;
import conexao.Funcionarios;
import java.awt.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import DAO.emprestimo_DAO;
import DAO.usuarios_DAO;
import conexao.Emprestimo;
import conexao.Livros;
import conexao.Usuarios;
import java.text.ParseException;
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;


/**
 *
 * @author will
 */
public class frm_emprestimos extends javax.swing.JFrame {

    ResultSet rs;
    ArrayList<Emprestimo> listas = new ArrayList<>();
    Connection conn;
    PreparedStatement pstm;
    String sql;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    
    public frm_emprestimos() {
        initComponents();
       lbl_hora_atual.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis())));
       
       maior_num_pedido();
      
    }    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_sair = new javax.swing.JButton();
        lbl_x = new javax.swing.JLabel();
        lbl_funcionario = new javax.swing.JLabel();
        txt_funcionario = new javax.swing.JTextField();
        lbl_emprestimos = new javax.swing.JLabel();
        lbl_id_livro = new javax.swing.JLabel();
        txt_id_livro = new javax.swing.JTextField();
        lbl_livro = new javax.swing.JLabel();
        txt_livro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_emprestimos = new javax.swing.JTable();
        btn_inserir = new javax.swing.JButton();
        lbl_hora_atual = new javax.swing.JLabel();
        lbl_cpf_usuario = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();
        txt_cpf_usuario = new javax.swing.JTextField();
        lbl_noome_usuario = new javax.swing.JLabel();
        txt_nome_usuario = new javax.swing.JTextField();
        lbl_cpf_funcionario = new javax.swing.JLabel();
        txt_cpf_funcionario = new javax.swing.JTextField();
        lbl_senha_usuario = new javax.swing.JLabel();
        txt_senha_usuario = new javax.swing.JPasswordField();
        btn_finalizar = new javax.swing.JToggleButton();
        lbl_fundo1 = new javax.swing.JLabel();
        lbl_fundo2 = new javax.swing.JLabel();
        lbl_n_pedido = new javax.swing.JLabel();
        lbl_numero_pedido = new javax.swing.JLabel();
        lbl_fundo3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1600, 550));
        getContentPane().setLayout(null);

        btn_sair.setText("Sair");
        btn_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sairActionPerformed(evt);
            }
        });
        getContentPane().add(btn_sair);
        btn_sair.setBounds(390, 430, 90, 29);

        lbl_x.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_x.setForeground(new java.awt.Color(255, 255, 255));
        lbl_x.setText("X");
        lbl_x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_xMouseClicked(evt);
            }
        });
        getContentPane().add(lbl_x);
        lbl_x.setBounds(1500, 1, 40, 60);

        lbl_funcionario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_funcionario.setText("Funcionario");
        getContentPane().add(lbl_funcionario);
        lbl_funcionario.setBounds(30, 150, 100, 21);

        txt_funcionario.setEditable(false);
        txt_funcionario.setEnabled(false);
        txt_funcionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_funcionarioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_funcionario);
        txt_funcionario.setBounds(150, 150, 340, 29);

        lbl_emprestimos.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lbl_emprestimos.setForeground(new java.awt.Color(255, 255, 255));
        lbl_emprestimos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_emprestimos.setText("Efetuar Empréstimo");
        lbl_emprestimos.setToolTipText("");
        getContentPane().add(lbl_emprestimos);
        lbl_emprestimos.setBounds(130, 0, 1550, 40);

        lbl_id_livro.setForeground(new java.awt.Color(255, 255, 255));
        lbl_id_livro.setText("ID livro");
        getContentPane().add(lbl_id_livro);
        lbl_id_livro.setBounds(30, 280, 66, 21);

        txt_id_livro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_id_livroActionPerformed(evt);
            }
        });
        getContentPane().add(txt_id_livro);
        txt_id_livro.setBounds(150, 280, 54, 29);

        lbl_livro.setForeground(new java.awt.Color(255, 255, 255));
        lbl_livro.setText("Livro");
        getContentPane().add(lbl_livro);
        lbl_livro.setBounds(210, 280, 42, 21);

        txt_livro.setEditable(false);
        txt_livro.setEnabled(false);
        getContentPane().add(txt_livro);
        txt_livro.setBounds(250, 280, 240, 29);

        tb_emprestimos.setAutoCreateRowSorter(true);
        tb_emprestimos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "N pedido", "CPF cliente", "Nome cliente", "ID livro", "Livro", "Emprestimo", "Devolução", "Devolvido?", "Multa", "Funcionario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_emprestimos.setAutoscrolls(false);
        tb_emprestimos.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        jScrollPane1.setViewportView(tb_emprestimos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(530, 70, 1010, 351);

        btn_inserir.setText("Inserir");
        btn_inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inserirActionPerformed(evt);
            }
        });
        getContentPane().add(btn_inserir);
        btn_inserir.setBounds(130, 430, 90, 29);

        lbl_hora_atual.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_hora_atual.setForeground(new java.awt.Color(255, 255, 255));
        lbl_hora_atual.setText("Data");
        getContentPane().add(lbl_hora_atual);
        lbl_hora_atual.setBounds(1280, 430, 190, 50);

        lbl_cpf_usuario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cpf_usuario.setText("CPF usuario");
        getContentPane().add(lbl_cpf_usuario);
        lbl_cpf_usuario.setBounds(30, 200, 100, 21);

        lbl_status.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_status.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(lbl_status);
        lbl_status.setBounds(60, 600, 1140, 50);

        txt_cpf_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cpf_usuarioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cpf_usuario);
        txt_cpf_usuario.setBounds(150, 190, 340, 29);

        lbl_noome_usuario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_noome_usuario.setText("Usuario");
        getContentPane().add(lbl_noome_usuario);
        lbl_noome_usuario.setBounds(30, 240, 53, 21);

        txt_nome_usuario.setEditable(false);
        txt_nome_usuario.setEnabled(false);
        txt_nome_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nome_usuarioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_nome_usuario);
        txt_nome_usuario.setBounds(150, 240, 340, 29);

        lbl_cpf_funcionario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cpf_funcionario.setText("CPF Funcionario");
        getContentPane().add(lbl_cpf_funcionario);
        lbl_cpf_funcionario.setBounds(30, 100, 105, 21);

        txt_cpf_funcionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cpf_funcionarioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cpf_funcionario);
        txt_cpf_funcionario.setBounds(150, 100, 340, 29);

        lbl_senha_usuario.setForeground(new java.awt.Color(255, 255, 255));
        lbl_senha_usuario.setText("Senha");
        getContentPane().add(lbl_senha_usuario);
        lbl_senha_usuario.setBounds(30, 380, 59, 21);

        txt_senha_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_senha_usuarioActionPerformed(evt);
            }
        });
        getContentPane().add(txt_senha_usuario);
        txt_senha_usuario.setBounds(140, 380, 350, 29);

        btn_finalizar.setText("Finalizar");
        btn_finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_finalizar);
        btn_finalizar.setBounds(240, 430, 93, 29);

        lbl_fundo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagem do WhatsApp de 2023-09-11 à(s) 20.19.25.jpg"))); // NOI18N
        lbl_fundo1.setText("jLabel3");
        getContentPane().add(lbl_fundo1);
        lbl_fundo1.setBounds(810, -30, 760, 790);

        lbl_fundo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagem do WhatsApp de 2023-09-11 à(s) 20.19.25.jpg"))); // NOI18N
        getContentPane().add(lbl_fundo2);
        lbl_fundo2.setBounds(310, 0, 752, 730);

        lbl_n_pedido.setForeground(new java.awt.Color(255, 255, 255));
        lbl_n_pedido.setText("Numero do pedido:");
        getContentPane().add(lbl_n_pedido);
        lbl_n_pedido.setBounds(30, 40, 150, 21);

        lbl_numero_pedido.setForeground(new java.awt.Color(255, 255, 255));
        lbl_numero_pedido.setText("1");
        getContentPane().add(lbl_numero_pedido);
        lbl_numero_pedido.setBounds(200, 40, 120, 30);

        lbl_fundo3.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fundo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Imagem do WhatsApp de 2023-09-11 à(s) 20.19.25.jpg"))); // NOI18N
        getContentPane().add(lbl_fundo3);
        lbl_fundo3.setBounds(0, 0, 752, 730);

        setSize(new java.awt.Dimension(1553, 732));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sairActionPerformed
        // TODO add your handling code here:
        
        frm_menu objfrm_menu = new frm_menu();
                objfrm_menu.setVisible(true);
                
                dispose();
                
    }//GEN-LAST:event_btn_sairActionPerformed

    private void txt_id_livroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_id_livroActionPerformed
        // TODO add your handling code here:
        
        buscar_item();
    }//GEN-LAST:event_txt_id_livroActionPerformed

    private void txt_cpf_funcionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cpf_funcionarioActionPerformed
        // TODO add your handling code here:
        
        buscar_funcionarios();
        
         
   
    }//GEN-LAST:event_txt_cpf_funcionarioActionPerformed

    private void txt_funcionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_funcionarioActionPerformed
        
        buscar_usuarios();
    }//GEN-LAST:event_txt_funcionarioActionPerformed

    private void txt_cpf_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cpf_usuarioActionPerformed
        // TODO add your handling code here:
        
         buscar_usuarios();
    }//GEN-LAST:event_txt_cpf_usuarioActionPerformed

    private void btn_inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inserirActionPerformed
        fazer_emprestimos();
       listar_emprestimos();
        
        
        
    }//GEN-LAST:event_btn_inserirActionPerformed

    private void txt_senha_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_senha_usuarioActionPerformed
        // TODO add your handling code here:
        
         Logar();
    }//GEN-LAST:event_txt_senha_usuarioActionPerformed

    private void btn_finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finalizarActionPerformed
   
      
        
        Logar();
        
        
        
    }//GEN-LAST:event_btn_finalizarActionPerformed

    private void txt_nome_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nome_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nome_usuarioActionPerformed

    private void lbl_xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_xMouseClicked
       dispose();
    }//GEN-LAST:event_lbl_xMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_emprestimos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_emprestimos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_emprestimos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_emprestimos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_emprestimos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_finalizar;
    private javax.swing.JButton btn_inserir;
    private javax.swing.JButton btn_sair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_cpf_funcionario;
    private javax.swing.JLabel lbl_cpf_usuario;
    private javax.swing.JLabel lbl_emprestimos;
    private javax.swing.JLabel lbl_funcionario;
    private javax.swing.JLabel lbl_fundo1;
    private javax.swing.JLabel lbl_fundo2;
    private javax.swing.JLabel lbl_fundo3;
    private javax.swing.JLabel lbl_hora_atual;
    private javax.swing.JLabel lbl_id_livro;
    private javax.swing.JLabel lbl_livro;
    private javax.swing.JLabel lbl_n_pedido;
    private javax.swing.JLabel lbl_noome_usuario;
    private javax.swing.JLabel lbl_numero_pedido;
    private javax.swing.JLabel lbl_senha_usuario;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_x;
    private javax.swing.JTable tb_emprestimos;
    private javax.swing.JTextField txt_cpf_funcionario;
    private javax.swing.JTextField txt_cpf_usuario;
    private javax.swing.JTextField txt_funcionario;
    private javax.swing.JTextField txt_id_livro;
    private javax.swing.JTextField txt_livro;
    private javax.swing.JTextField txt_nome_usuario;
    private javax.swing.JPasswordField txt_senha_usuario;
    // End of variables declaration//GEN-END:variables


  private void buscar_funcionarios(){
    
    String sql = " select * from funcionarios where cpf_funcionario = " + txt_cpf_funcionario.getText();
        try
        {
            livros_DAO objlivros_dao = new livros_DAO();
            ResultSet rs = objlivros_dao.executarconsulta(sql);
            while (rs.next())
            {
                
                txt_funcionario.setText("" + rs.getString("nome_funcionario"));

            }
        }
        catch (Exception erro)
        {
            System.out.println("Problema na busca");
        }
       
    }
  
  
  private void buscar_usuarios(){
    
    String sql = " select * from usuarios where cpf_usuario = " + txt_cpf_usuario.getText();
        try
        {
            livros_DAO objlivros_dao = new livros_DAO();
            ResultSet rs = objlivros_dao.executarconsulta(sql);
            while (rs.next())
            {
                
                txt_nome_usuario.setText("" + rs.getString("nome_usuario"));
                

            } }
        catch (Exception erro)
        {
            System.out.println("Problema na busca");
        }
  }
  
  private void buscar_item(){
    
    String sql = " select * from livros where id_livro = " + txt_id_livro.getText();
        try
        {
            livros_DAO objlivros_dao = new livros_DAO();
            ResultSet rs = objlivros_dao.executarconsulta(sql);
            while (rs.next())
            {
                
                txt_livro.setText("" + rs.getString("nome_livro"));
                

            }
        }
        catch (Exception erro)
        {
            System.out.println("Problema na busca");
        }
  }

 //   private ArrayList<Emprestimo> pesquisar_emprestimos() {
  //      throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
  //  }

  
  public class TesteDatas {
  public void main(String args[]){
      SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
      Date dataBase = null;
      Date vencimento = null;
      try {
         dataBase = sdf.parse("07/10/1997");
         vencimento = sdf.parse("03/07/2000");
      } catch (java.text.ParseException e) { return; }

      long diferencaMS = vencimento.getTime() - dataBase.getTime();
      long diferencaSegundos = diferencaMS / 1000;
      long diferencaMinutos = diferencaSegundos / 60;
      long diferencaHoras = diferencaMinutos / 60;
      long diferencaDias = diferencaHoras / 24;

      System.out.println(diferencaMS);
      System.out.println(diferencaSegundos);
      System.out.println(diferencaMinutos);
      System.out.println(diferencaHoras);
      System.out.println(diferencaDias);
   
  }
}
  
  private int fazer_emprestimos() {
    String cpf_funcionario, cpf_usuario, data;
    Date data_emprestimo, data_devolucao;
      
    int id_livro, pedido;

    pedido = Integer.parseInt(lbl_numero_pedido.getText());
    cpf_funcionario = txt_cpf_funcionario.getText();
    cpf_usuario = txt_cpf_usuario.getText();
    id_livro = Integer.parseInt(txt_id_livro.getText());

    try {
        data = lbl_hora_atual.getText();
        data_emprestimo = formato.parse(data);
        data_devolucao = formato.parse("01/01/2030");
    } catch (ParseException e) {
        // Trate a exceção aqui (por exemplo, exiba uma mensagem de erro)
        e.printStackTrace();
        return -1; // Retornar um valor de erro ou lançar uma exceção, dependendo da sua lógica de tratamento de erro.
    }

    // Crie um objeto Emprestimo com os valores obtidos
    Emprestimo objemprestimo = new Emprestimo();
    objemprestimo.setpedido(pedido);
    objemprestimo.setCpfFuncionario(cpf_funcionario);
    objemprestimo.setCpfUsuario(cpf_usuario);
    objemprestimo.setIdLivro(id_livro);
    objemprestimo.setDataEmprestimo(data_emprestimo);

    // Crie uma instância da classe EmprestimoDAO e insira o empréstimo no banco de dados
    emprestimo_DAO emprestimoDAO = new emprestimo_DAO();
    emprestimoDAO.fazer_emprestimo(objemprestimo);

    return 0; 
}

  

  private void Logar(){
 try {
            String cpf_usuario, senha_usuario;

            cpf_usuario = txt_cpf_usuario.getText();
            senha_usuario = txt_senha_usuario.getText();

            Usuarios objusuarios = new Usuarios();
            objusuarios.setCpf(cpf_usuario);
            objusuarios.setSenha(senha_usuario);
            
            usuarios_DAO objusuarios_dao = new usuarios_DAO();
            ResultSet rs_usuarios_dao = objusuarios_dao.logar_usuarios(objusuarios);
        
            if(rs_usuarios_dao.next()){
                //chamar tela
                
                fazer_emprestimos();
                listar_emprestimos();

                
            }else{
                //mensagem de erro
                JOptionPane.showMessageDialog(null, "Usuario ou senha invalida");
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null,"frm_emprestimo"+ erro);
        }
            
 


}
  
  
  
  private void lista_emprestimos() {
       
        try {
            emprestimo_DAO objemprestimosDAO = new emprestimo_DAO();
            DefaultTableModel model = (DefaultTableModel) tb_emprestimos.getModel();
            model.setNumRows(0);
            ArrayList<Emprestimo> lista = objemprestimosDAO.pesquisar_emprestimo(WIDTH);

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getPedido(),
                    lista.get(num).getCpfUsuario(),
                    lista.get(num).getUsuario(),
                    lista.get(num).getIdLivro(),
                    lista.get(num).getNomeLivro(),
                    lista.get(num).getDataEmprestimo(),
                    lista.get(num).getDataDevolucao(),
                    lista.get(num).getDataDevolvido(),
                    lista.get(num).getMulta(),
                    lista.get(num).getFuncionario()

                });
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "listar_emprestimos " + erro);
        }
    }

    public ArrayList<Emprestimo> pesquisar_emprestimo() 
    {

        String sql = "select * from emprestimo where pedido = "+ lbl_numero_pedido;
        conn = new conexao_DAO().conectaBD();
        try {
            pstm = conn.prepareStatement(sql);
            rs = pstm.executeQuery();

            while (rs.next()) {
                Emprestimo objemprestimo = new Emprestimo();
                objemprestimo.setpedido(rs.getInt("pedido"));
                objemprestimo.setCpfFuncionario(rs.getString("cpf_funcionario"));
                objemprestimo.setCpfUsuario(rs.getString("cpf_usuario"));
                objemprestimo.setIdLivro(rs.getInt("id_livro"));
                objemprestimo.setDataEmprestimo(rs.getDate("data_emprestimo"));
                objemprestimo.setDataDevolucao(rs.getDate("data_devolucao"));
                objemprestimo.setDataDevolvido(rs.getDate("data_devolvido"));
                objemprestimo.setMulta(rs.getDouble("multa"));

                listas.add(objemprestimo);
            }

        } catch (SQLException erro) {

            JOptionPane.showMessageDialog(null, "frmemprestimo pesquisar_emprestimo: " + erro);
        }
        return listas;
    }

    
   private void listar_emprestimos() {
       
        try {
            emprestimo_DAO objemprestimosDAO = new emprestimo_DAO();
            DefaultTableModel model = (DefaultTableModel) tb_emprestimos.getModel();
            model.setNumRows(0);
            ArrayList<Emprestimo> lista = objemprestimosDAO.pesquisar_emprestimo(WIDTH);

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getPedido(),
                    lista.get(num).getCpfUsuario(),
                    lista.get(num).getUsuario(),
                    lista.get(num).getIdLivro(),
                    lista.get(num).getNomeLivro(),
                    lista.get(num).getDataEmprestimo(),
                    lista.get(num).getDataDevolucao(),
                    lista.get(num).getDataDevolvido(),
                    lista.get(num).getMulta(),
                    lista.get(num).getFuncionario()

                });
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "listar_emprestimos " + erro);
        }
    }
    
   
    
    public ArrayList<Emprestimo> pesquisar_emprestimos( int String) {

        sql = "select * from emprestimo where pedido = "+ lbl_numero_pedido.getText();
        conn = new conexao_DAO().conectaBD();
        try {
            pstm = conn.prepareStatement(sql);
            rs = pstm.executeQuery();

            while (rs.next()) {
                Emprestimo objemprestimo = new Emprestimo();
                objemprestimo.setId(rs.getInt("pedido"));
                objemprestimo.setCpfFuncionario(rs.getString("cpf_funcionario"));
                objemprestimo.setFuncionario(rs.getString("funcionario"));
                objemprestimo.setCpfUsuario(rs.getString("cpf_usuario"));
                objemprestimo.setUsuario(rs.getString("usuario"));
                objemprestimo.setIdLivro(rs.getInt("id_livro"));
                objemprestimo.setNomeLivro(rs.getString("nome_livro"));
                objemprestimo.setDataEmprestimo(rs.getDate(("data_emprestimo")));
                objemprestimo.setDataDevolucao(rs.getDate("data_devolucao"));
                objemprestimo.setDataDevolvido(rs.getDate("data_devolvido"));
                objemprestimo.setMulta(rs.getDouble("multa"));

                listas.add(objemprestimo);  
            }

        } catch (SQLException erro) {

            JOptionPane.showMessageDialog(null, "frm_emprestimo pesquisar_emprestimos: " + erro);
        }
        return listas;
    }

   private void maior_num_pedido(){
       
       String sql = "select max(pedido) from emprestimo";
        conn = new conexao_DAO().conectaBD();
        
        try {
            pstm = conn.prepareStatement(sql);
            rs = pstm.executeQuery();
            
            if (rs.next()) {
            int maior_pedido = rs.getInt(1);
            lbl_numero_pedido.setText(String.valueOf(maior_pedido + 1));
        } else {
            lbl_numero_pedido.setText("1"); // Caso não haja registros na tabela, comece com o número 1.
        }
            
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "maior_num_pedido" + erro);
        }
   }
    
}


    
  
   


